Существует множества методологий анализа производительности, включая чек-лист инструментов, метод USE, определение характеристик рабочей нагрузки, анализ задержки и многие другие. 

## ТИПЫ ИНСТРУМЕНТОВ
Инструменты наблюдения удобно классифицировать по области покрытия — си-
стема целиком (system-wide) или отдельный процесс (per-process), а также по тому, 
на чем они основаны — на счетчиках или событиях.
Некоторые инструменты присутствуют в нескольких квадрантах. Например, top(1), 
помимо прочего, выводит информацию о системе в целом, а инструменты анализа 
всей системы, основанные на событиях, часто поддерживают фильтрацию для вы-
вода сведений о конкретном процессе (-p PID).
К инструментам, основанным на событиях, относятся профилировщики и трасси-
ровщики. Профилировщики наблюдают за активностью, выполняя серию момен-
тальных снимков по событиям и создавая грубую картину цели. Трассировщики 
отслеживают каждое интересующее событие и могут обрабатывать их, что можно 
использовать, например, для создания нестандартных счетчиков.

Мы же остановимся на описании инструментов используемых в нашей организации.

По умолчанию в дистрибутиве Linux обычно устанавлены пакеты procps (ps, vmstat, uptime, top) и util-linux (dmesg, lsblk, lscpu), все остальные нужно добавить самостоятельно, у установлены еще пакеты sysstat, iproute2.

### Традиционные инструменты доступные в большинстве дистрибутивов Linux.


1.10.1. Анализ производительности Linux за 60 секунд

uptime - Средние значения нагрузки, чтобы определить, увеличивается 
или уменьшается нагрузка (можно сравнить средние значения за 1, 5 и 15 минут) 
6.6.1

dmesg -T - Ошибки в ядре, включая события OOM (нехватки памяти)
7.5.11

top - Общий обзор
6.6.6

vmstat -SM 1 - Общесистемные статистики: длина очереди на выполнение, подкачка (swapping), общая доля занятости процессора
7.5.1
$ vmstat 1
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
r b swpd free buff cache si so bi bo in cs us sy id wa st
15 0 0 451732 70588 866628 0 0 1 10 43 38 2 1 97 0 0
15 0 0 450968 70588 866628 0 0 0 612 1064 2969 72 28 0 0 0
15 0 0 450660 70588 866632 0 0 0 0 961 2932 72 28 0 0 0
15 0 0 450952 70588 866632 0 0 0 0 1015 3238 74 26 0 0 0
В первой строке должна выводиться обобщенная информация с момента загрузки. Но в Linux вывод в столбцах procs и memory начинается со значений, характеризующих текущее состояние. 
С процессором связаны столбцы:
r: длина очереди на выполнение — общее количество потоков, готовых к выполнению.
us: процент времени выполнения в режиме пользователя.
sy: процент времени выполнения в режиме системы (ядра).
id: процент времени бездействия.
wa: процент времени, проведенного потоками в ожидании завершения ввода/вывода, когда потоки оставались заблокированными на время дискового ввода/вывода.
st: процент заимствованного времени — время, потраченное на обслуживание других клиентов в виртуализированных средах.
Все эти значения — общесистемные средние значения для всех процессоров, кроме r.
В Linux столбец r — это общее количество задач, ожидающих выполнения плюс выполняющихся.

mpstat -P ALL 1 - Баланс нагрузки по процессорам: увеличенная нагрузка на один из процессоров может указывать на плохое масштабирование потоков выполнения
6.6.3

pidstat 1 - Потребление процессора каждым процессом: позволяет выявить непредвиденных потребителей процессорного времени и определить, сколько процессорного времени потрачено каждым процессом в пространстве ядра и в пространстве пользователя
6.6.7

iostat -sxz 1 - Статистики дискового ввода/вывода: количество операций ввода/вывода в секунду (IOPS) и пропускная способность, среднее время ожидания, процент занятости
9.6.1

free –m - Потребление памяти, включая кэши файловой системы
8.6.2

sar -n DEV 1 - Статистики сетевого устройства ввода/вывода: количество пакетов и пропускная способность
10.6.6

sar -n TCP,ETCP - Статистики TCP: частота приема соединений, частота повторных передач
10.6.6


